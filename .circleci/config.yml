version: 2.1

jobs:
  build-frontend:
    docker:
      - image: cimg/node:18.12.1
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-build]
      - run:
          name: Build front-end
          command: |
            cd frontend
            npm install
            CI=false npm run build
      - save_cache:
          paths: [frontend/node_modules]
          key: frontend-build
          
  test-frontend:
    docker:
      - image: cimg/node:18.12.1
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-test]
      - run:
          name: Front-end test
          command: |
              cd frontend
              npm install
              npm run test
      - save_cache:
          paths: [frontend/node_modules]
          key: frontend-test
          
  scan-frontend:
    docker:
      - image: cimg/node:18.12.1
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-scan]
      - run:
          name: Front-end scan
          command: |
              cd frontend
              npm install
              npm audit fix --audit-level=critical
      - save_cache:
          paths: [frontend/node_modules]
          key: frontend-scan
          
  build-frontend-docker-image:
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - checkout
      - setup_remote_docker

      #- restore_cache:
       #   keys:
        #    - v1-{{ .Branch }}
     # - run:
      #    name: Load Docker image layer cache
       #   command: |
        #    set +o pipefail
         #   docker load -i /caches/frontend.tar | true
      - run:
          name: Build application Docker image
          command: |
            cd frontend/
            docker build -t frontend .
      #- run:
       #   name: Save Docker image layer cache
        #  command: |
         #   mkdir -p /caches
          #  docker save -o /caches/frontend.tar frontend
      #- save_cache:
       #   key: v1-{{ .Branch }}-{{ epoch }}
        #  paths:
         #   - /caches/frontend.tar
      - run:
          name: Push Image to docker hub
          command: |
            docker login -u ${DOCKER_USERNAME} -p ${DOCKER_PASSWORD}
            docker tag frontend ehmeeudosen/fixit-fe:v1
            docker push ehmeeudosen/fixit-fe:v1

workflows:
  default:
    jobs:
      - build-frontend
      - test-frontend:
          requires: [build-frontend]
      - scan-frontend:
          requires: [build-frontend]
      - build-frontend-docker-image:
          requires: [test-frontend] #remember to channge to test
          filters:
            branches:
              only: [dev]
